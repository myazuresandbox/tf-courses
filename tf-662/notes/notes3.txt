Prelude
In this topic, you are going to learn about:
Remote backends
Creating a storage account and storage container
Configuring remote backends
Sensitive parameter

Why Backend?
In theTerraform Constructs course, you have learned that backend will be helpful when working in a team.
It is better to store the file in a local when you are the only person in the project. When multiple persons are working in a project, it is not a good idea to store the state file in local.
It is better to store the code in a central repository, GitHub is the first thought when it comes to the central repository.
However, is having some disadvantages of doing so:
You have to maintain push, pull configurations. If one pushes the wrong configuration and commits it, it becomes a problem.
State file consists of sensitive information. So state files are non-editable.
Then how to maintain a state file? Terraform has a feature of backend which helps to solve this issue. Read further to know about the backend.


Backend
Backend in terraform explains how the state file is loaded and operations are executed.

Backend can get initialize only after running terraform init command.

So, terraform init is required to be run every time

when backend is configured.
when any changes made to the backend
when the backend configuration is removed completely
terraform will auto-detect when the initialization is required and errors out in that situation.

Terraform cannot perform auto-initialize because it may require additional info from the user, to perform state migrations, etc..

Creating Backend
In this topic, you will learn how to create backend in azure using terraform.

You can get the code snippet to create backend from here.

Below are the steps which you will be maintaining for creating backend.

Create a storage account

Create a storage container

Create a backend

Get the storage account access key and resource group name, give it as a parameter to the backend.

Proceed further to know how to create backend in azure using terraform